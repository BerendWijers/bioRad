% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bioRad-deprecated.R
\name{bioRad-deprecated}
\alias{bioRad-deprecated}
\alias{beamheight-deprecated}
\alias{beamheight}
\alias{beamwidth-deprecated}
\alias{beamwidth}
\alias{bind-deprecated}
\alias{bind}
\alias{vol2bird-deprecated}
\alias{vol2bird}
\alias{night-deprecated}
\alias{night}
\alias{day-deprecated}
\alias{day}
\alias{composite-deprecated}
\alias{composite}
\alias{dbz2eta-deprecated}
\alias{dbz2eta}
\alias{eta2dbz-deprecated}
\alias{eta2dbz}
\alias{checkDocker-deprecated}
\alias{checkDocker}
\alias{updateDocker-deprecated}
\alias{updateDocker}
\alias{basemap-deprecated}
\alias{basemap}
\alias{download_vp-deprecated}
\alias{download_vp}
\alias{elangle-deprecated}
\alias{elangle}
\alias{fetch-deprecated}
\alias{fetch}
\alias{getscan-deprecated}
\alias{getscan}
\alias{vintegrate-deprecated}
\alias{vintegrate}
\alias{rsl2odim-deprecated}
\alias{rsl2odim}
\alias{ppi-deprecated}
\alias{ppi}
\alias{h5ODIMobject-deprecated}
\alias{h5ODIMobject}
\alias{read.pvol-deprecated}
\alias{read.pvol}
\alias{readvp-deprecated}
\alias{readvp}
\alias{readvp.list-deprecated}
\alias{readvp.list}
\alias{readvp.table-deprecated}
\alias{readvp.table}
\alias{regularize-deprecated}
\alias{regularize}
\alias{sd_vvp-deprecated}
\alias{sd_vvp}
\alias{sd_vvp-deprecated}
\alias{sd_vvp<-}
\alias{retrieve_vp_paths-deprecated}
\alias{retrieve_vp_paths}
\alias{suntime-deprecated}
\alias{suntime}
\alias{is.vplist-deprecated}
\alias{is.vplist}
\alias{vpts-deprecated}
\alias{vpts}
\alias{VP-deprecated}
\alias{VP}
\alias{VPTS-deprecated}
\alias{VPTS}
\alias{SCAN-deprecated}
\alias{SCAN}
\alias{mtr}
\alias{mt}
\alias{cmt}
\title{Deprecated functions in package \pkg{bioRad}}
\usage{
beamheight(range, elev, k = 4/3, lat = 35, re = 6378, rp = 6357)

beamwidth(range, angle = 1)

bind(x, ...)

vol2bird(...)

night(x, ..., elev = -0.268)

day(x, elev = -0.268)

composite(...)

dbz2eta(...)

eta2dbz(...)

checkDocker(...)

updateDocker(...)

basemap(...)

download_vp(...)

elangle(...)

fetch(...)

getscan(...)

vintegrate(...)

rsl2odim(...)

ppi(...)

h5ODIMobject(...)

read.pvol(...)

readvp(...)

readvp.list(...)

readvp.table(...)

regularize(...)

sd_vvp(...)

sd_vvp(x) <- value

retrieve_vp_paths(...)

suntime(..., rise = TRUE)

is.vplist(...)

vpts(...)

VP(...)

VPTS(...)

SCAN(...)

mtr(x, alt.min = 0, alt.max = Inf, alpha = NA)

mt(x, alt.min = 0, alt.max = Inf, alpha = NA, interval.max = Inf)

cmt(x, alt.min = 0, alt.max = Inf, alpha = NA, interval.max = Inf)
}
\arguments{
\item{x}{A \code{vp}, list of \code{vp} objects or \code{vpts} object.}

\item{alt.min}{Minimum altitude in m.}

\item{alt.max}{Maximum altitude in m.}

\item{alpha}{(optional) migratory direction of interest in clockwise degrees
from north, otherwise \code{NA}.}

\item{interval.max}{Maximum time interval belonging to a single profile in
seconds. Traffic rates are set to zero at times \code{t} for which no
profiles can be found within the period \code{t-interval.max/2} to
\code{t+interval.max/2}.}

\item{x}{A \code{vpts}.}

\item{x}{A \code{vpts}.}

\item{interval.max}{Maximum time interval belonging to a single profile in
seconds. Traffic rates are set to zero at times \code{t} for which no
profiles can be found within the period \code{t-interval.max/2} to
\code{t+interval.max/2}.}
}
\value{
An atomic vector of migration traffic rates in individuals/km/hour.

A numeric value equal to migration traffic in number of
individuals / km.

Atomic vector with (cumulative) migration traffic in number of
individuals / km.
}
\description{
The functions listed below are deprecated or renamed and will be defunct in
the near future. When possible, alternative functions with similar
functionality are mentioned.

Migration traffic rate (MTR) for an altitude layer, defined as the
number of targets crossing a 1 km line perpendicular to the migratory
movement per hour.

Total migration traffic, which is calculated by time-integration of
migration traffic rates. Migration traffic gives the number of individuals
that have passed per km perpendicular to the migratory direction at the
position of the radar for the full period of the time series within the
specified altitude band.

Cumulative migration traffic is calculated as the cumulative sum of the
migration traffic within each time step of a time series. Cumulative
migration traffic gives the number of individuals that have passed per km
perpendicular to the migratory direction at the position of the radar as a
function of time from the start of time series within the specified altitude
band.
}
\details{
Migration traffic rate (MTR) for an altitude layer is a flux measure, defined
as the number of targets crossing a unit of transect per hour.

The transect direction is set by the angle \code{alpha}. When
\code{alpha=NA}, the transect runs perpendicular to the measured migratory
direction. \code{mtr} then equals the number of crossing targets per km
transect per hour, for a transect kept perpendicular to the measured
migratory movement at all times and altitudes. In this case \code{mtr} is
always a positive quantity, defined as:

\deqn{mtr = \sum_i dens_i ff_i \Delta h}{mtr = \sum_i dens_i ff_i \Delta h}

with the sum running over all altitude layers between \code{alt.min} and
\code{alt.max}, \eqn{dens_i} the bird density, \eqn{ff_i} the ground speed at
altitude layer i, and \eqn{\Delta h} the altitude layer width.

If \code{alpha} is given a numeric value, the transect is taken perpendicular
to the direction \code{alpha}, and the number of crossing targets per hour
per km transect is calculated as:

\deqn{mtr = \sum_i dens_i ff_i \cos(dd_i-alpha) \Delta h}{mtr = \sum_i dens_i ff_i \cos(dd_i-alpha) \Delta h}
with \eqn{dd_i} the migratory direction at altitude i.

Note that this equation evaluates to the previous equation when \code{alpha} equals \eqn{dd_i}.

In this definition \code{mtr} is a traditional flux into a direction of
interest. Targets moving into the direction \code{alpha} contribute
positively to \code{mtr}, while targets moving in the opposite direction
contribute negatively to \code{mtr}. Therefore \code{mtr} can be both
positive or negative, depending on the definition of alpha.

This is a wrapper function for \link{integrate_profile}, extracting only the
migration traffic rate data.
}
\section{\code{beamheight}}{

Use \code{\link{beam_height}} instead.
}

\section{\code{beamwidth}}{

Use \code{\link{beam_width}} instead.
}

\section{\code{bind}}{

Use \code{\link{bind_into_vpts}} instead.
}

\section{\code{vol2bird}}{

Use \code{\link{calculate_vp}} instead.
}

\section{\code{night}}{

Use \code{\link{check_night}} instead.
}

\section{\code{day}}{

Use \code{\link{check_night}} instead.
}

\section{\code{composite}}{

Use \code{\link{composite_ppi}} instead.
}

\section{\code{dbz2eta}}{

Use \code{\link{dbz_to_eta}} instead.
}

\section{\code{eta2dbz}}{

Use \code{\link{eta_to_dbz}} instead.
}

\section{\code{checkDocker}}{

Use \code{\link{check_docker}} instead.
}

\section{\code{updateDocker}}{

Use \code{\link{update_docker}} instead.
}

\section{\code{basemap}}{

Use \code{\link{download_basemap}} instead.
}

\section{\code{download_vp}}{

Use \code{\link{download_vpfiles}} instead.
}

\section{\code{elangle}}{

Use \code{\link{get_angles}} instead.
}

\section{\code{fetch}}{

Use \code{\link{get_quantity}} instead.
}

\section{\code{getscan}}{

Use \code{\link{get_scan}} instead.
}

\section{\code{vintegrate}}{

Use \code{\link{integrate_profile}} instead.
}

\section{\code{rsl2odim}}{

Use \code{\link{nexrad_to_odim}} instead.
}

\section{\code{ppi}}{

Use \code{\link{project_as_ppi}} instead.
}

\section{\code{h5ODIMobject}}{

Use \code{\link{get_odim_object_type}} instead.
}

\section{\code{read.pvol}}{

Use \code{\link{read_pvolfile}} instead.
}

\section{\code{readvp}}{

Use \code{\link{read_vpfiles}} instead.
}

\section{\code{readvp.list}}{

Use \code{\link{read_vpfiles}} instead.
}

\section{\code{readvp.table}}{

Use \code{\link{read_vpts}} instead.
}

\section{\code{regularize}}{

Use \code{\link{regularize_vpts}} instead.
}

\section{\code{sd_vvp}}{

Use \code{\link{rvsd}} instead.
}

\section{\code{sd_vvp<-}}{

Use \code{\link{rvsd<-}} instead.
}

\section{\code{retrieve_vp_paths}}{

Use \code{\link{select_vpfiles}} instead.
}

\section{\code{suntime}}{

Use \code{\link{sunrise}} or \code{\link{sunset}} instead.
}

\section{\code{is.vplist}}{

The \code{vplist} object is deprecated. Use a regular list of \code{vp}
objects (\code{c(vp, vp))} instead.
}

\section{\code{vpts}}{

Use \code{\link{bind_to_vpts}} instead.
}

\section{\code{VP}}{

Use \code{\link{example_vp}} instead.
}

\section{\code{VPTS}}{

Use \code{\link{example_vpts}} instead.
}

\section{\code{SCAN}}{

Use \code{\link{example_scan}} instead.
}

\examples{
# MTR for a single vertical profile:
mtr(example_vp)

# MTRs for a time series of vertical profiles:
data(example_vpts)
# print migration traffic rates:
mtr(example_vpts)
# to plot migration traffic rate data, use integrate_profile:
plot(integrate_profile(example_vpts), quantity = "mtr")
# get example time series of vertical profiles:
data(example_vpts)
example_vpts
# total migration traffic in full altitude band:
mt(example_vpts)
# total migration traffic in 0-1000 meter band:
mt(example_vpts, alt.min = 0, alt.max = 1000)
# get example time series of vertical profiles:
data(example_vpts)
# print cumulative migration traffic to console:
cmt(example_vpts)
# plot cumulative migration traffic:
plot(cmt(example_vpts), type = "l", xlab = "time" , ylab = "CMT [birds/km]")
}
\keyword{internal}
